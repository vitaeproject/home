{"ast":null,"code":"'use strict';\n\nvar promisify = require('promisify-es6');\n\nvar dagPB = require('ipld-dag-pb');\n\nvar DAGNode = dagPB.DAGNode;\n\nvar LRU = require('lru-cache');\n\nvar lruOptions = {\n  max: 128\n};\nvar cache = LRU(lruOptions);\n\nvar SendOneFile = require('../utils/send-one-file');\n\nvar once = require('once');\n\nmodule.exports = function (send) {\n  var sendOneFile = SendOneFile(send, 'object/put');\n  return promisify(function (obj, options, _callback) {\n    if (typeof options === 'function') {\n      _callback = options;\n      options = {};\n    }\n\n    var callback = once(_callback);\n\n    if (!options) {\n      options = {};\n    }\n\n    var tmpObj = {\n      Data: null,\n      Links: []\n    };\n\n    if (Buffer.isBuffer(obj)) {\n      if (!options.enc) {\n        tmpObj = {\n          Data: obj.toString(),\n          Links: []\n        };\n      }\n    } else if (obj.multihash) {\n      tmpObj = {\n        Data: obj.data.toString(),\n        Links: obj.links.map(function (l) {\n          var link = l.toJSON();\n          link.hash = link.multihash;\n          return link;\n        })\n      };\n    } else if (typeof obj === 'object') {\n      tmpObj.Data = obj.Data.toString();\n      tmpObj.Links = obj.Links;\n    } else {\n      return callback(new Error('obj not recognized'));\n    }\n\n    var buf;\n\n    if (Buffer.isBuffer(obj) && options.enc) {\n      buf = obj;\n    } else {\n      buf = Buffer.from(JSON.stringify(tmpObj));\n    }\n\n    var enc = options.enc || 'json';\n    var sendOptions = {\n      qs: {\n        inputenc: enc\n      }\n    };\n    sendOneFile(buf, sendOptions, function (err, result) {\n      if (err) {\n        return callback(err); // early\n      }\n\n      if (Buffer.isBuffer(obj)) {\n        if (!options.enc) {\n          obj = {\n            Data: obj,\n            Links: []\n          };\n        } else if (options.enc === 'json') {\n          obj = JSON.parse(obj.toString());\n        }\n      }\n\n      var node;\n\n      if (obj.multihash) {\n        node = obj;\n      } else if (options.enc === 'protobuf') {\n        dagPB.util.deserialize(obj, function (err, _node) {\n          if (err) {\n            return callback(err);\n          }\n\n          node = _node;\n          next();\n        });\n        return;\n      } else {\n        DAGNode.create(Buffer.from(obj.Data), obj.Links, function (err, _node) {\n          if (err) {\n            return callback(err);\n          }\n\n          node = _node;\n          next();\n        });\n        return;\n      }\n\n      next();\n\n      function next() {\n        var nodeJSON = node.toJSON();\n\n        if (nodeJSON.multihash !== result.Hash) {\n          var _err = new Error('multihashes do not match');\n\n          return callback(_err);\n        }\n\n        cache.set(result.Hash, node);\n        callback(null, node);\n      }\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"script"}