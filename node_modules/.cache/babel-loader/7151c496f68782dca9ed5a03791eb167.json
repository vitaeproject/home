{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Jen/UCB/home/src/App.js\";\nimport React from 'react';\nimport { Form, Table, TabContent, TabPane, Nav, NavItem, NavLink, Button, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport Users from './Users.js';\nimport web3 from './web3.js';\nimport ipfs from './ipfs.js';\nimport storehash from './storehash.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.captureFile = function (event) {\n      event.stopPropagation();\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        return _this.convertToBuffer(reader);\n      };\n    };\n\n    _this.convertToBuffer =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(reader) {\n        var buffer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Buffer.from(reader.result);\n\n              case 2:\n                buffer = _context.sent;\n\n                //set this buffer -using es6 syntax\n                _this.setState({\n                  buffer: buffer\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onClick =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              _this.setState({\n                blockNumber: \"waiting..\"\n              });\n\n              _this.setState({\n                gasUsed: \"waiting...\"\n              }); //get Transaction Receipt in console on click\n              //See: https://web3js.readthedocs.io/en/1.0/web3-eth.html#gettransactionreceipt\n\n\n              _context2.next = 5;\n              return web3.eth.getTransactionReceipt(_this.state.transactionHash, function (err, txReceipt) {\n                console.log(err, txReceipt);\n\n                _this.setState({\n                  txReceipt: txReceipt\n                });\n              });\n\n            case 5:\n              _context2.next = 7;\n              return _this.setState({\n                blockNumber: _this.state.txReceipt.blockNumber\n              });\n\n            case 7:\n              _context2.next = 9;\n              return _this.setState({\n                gasUsed: _this.state.txReceipt.gasUsed\n              });\n\n            case 9:\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[0, 11]]);\n    }));\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(event) {\n        var accounts, ethAddress;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault(); //bring in user's metamask account address\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                console.log('Sending from Metamask account: ' + accounts[0]); //obtain contract address from storehash.js\n\n                _context3.next = 7;\n                return storehash.options.address;\n\n              case 7:\n                ethAddress = _context3.sent;\n\n                _this.setState({\n                  ethAddress: ethAddress\n                }); //save document to IPFS,return its hash#, and set hash# to state\n                //https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add\n\n\n                _context3.next = 11;\n                return ipfs.add(_this.state.buffer, function (err, ipfsHash) {\n                  console.log(err, ipfsHash); //setState by setting ipfsHash to ipfsHash[0].hash\n\n                  _this.setState({\n                    ipfsHash: ipfsHash[0].hash\n                  }); // call Ethereum contract method \"sendHash\" and .send IPFS hash to etheruem contract\n                  //return the transaction hash from the ethereum contract\n                  //see, this https://web3js.readthedocs.io/en/1.0/web3-eth-contract.html#methods-mymethod-send\n\n\n                  storehash.methods.sendHash(_this.state.ipfsHash).send({\n                    from: accounts[0]\n                  }, function (error, transactionHash) {\n                    console.log(transactionHash);\n\n                    _this.setState({\n                      transactionHash: transactionHash\n                    });\n                  }); //storehash\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      activeTab: '1',\n      ipfsHash: null,\n      buffer: '',\n      ethAddress: '',\n      blockNumber: '',\n      transactionHash: '',\n      gasUsed: '',\n      txReceipt: ''\n    };\n    _this.userLogIn = _this.userLogIn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.employerLogIn = _this.employerLogIn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.verifierLogIn = _this.verifierLogIn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"userLogIn\",\n    //onSubmit\n    value: function userLogIn() {}\n  }, {\n    key: \"employerLogIn\",\n    value: function employerLogIn() {}\n  }, {\n    key: \"verifierLogIn\",\n    value: function verifierLogIn() {}\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('./header.png'),\n        width: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Nav, {\n        tabs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this2.toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Users\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this2.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Verifiers\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '3'\n        }),\n        onClick: function onClick() {\n          _this2.toggle('3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Employers\"))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        size: \"sm\",\n        block: true,\n        onClick: this.userLogIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(Users, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        size: \"sm\",\n        block: true,\n        onClick: this.verifierLogIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \" Choose file to send to IPFS \"), React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Send\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \" Get Transaction Receipt \"), React.createElement(Table, {\n        bordered: true,\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Tx Receipt Category\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Values\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"IPFS Hash # stored on Eth Contract\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, this.state.ipfsHash)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Ethereum Contract Address\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, this.state.ethAddress)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Tx Hash # \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, this.state.transactionHash)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Block Number # \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, this.state.blockNumber)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Gas Used\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, this.state.gasUsed))))), \"); } //render } //App\"))), React.createElement(TabPane, {\n        tabId: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        size: \"sm\",\n        block: true,\n        onClick: this.employerLogIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Sign In\"))))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/Jen/UCB/home/src/App.js"],"names":["React","Form","Table","TabContent","TabPane","Nav","NavItem","NavLink","Button","Row","Col","classnames","Users","web3","ipfs","storehash","App","props","captureFile","event","stopPropagation","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","from","result","buffer","setState","onClick","blockNumber","gasUsed","eth","getTransactionReceipt","state","transactionHash","err","txReceipt","console","log","onSubmit","getAccounts","accounts","options","address","ethAddress","add","ipfsHash","hash","methods","sendHash","send","error","toggle","bind","activeTab","userLogIn","employerLogIn","verifierLogIn","tab","require","active","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Table, TabContent, TabPane, Nav, NavItem, NavLink, Button, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport Users from './Users.js';\nimport web3 from './web3.js';\nimport ipfs from './ipfs.js';\nimport storehash from './storehash.js';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeTab: '1',\n      ipfsHash: null,\n      buffer: '',\n      ethAddress: '',\n      blockNumber: '',\n      transactionHash: '',\n      gasUsed: '',\n      txReceipt: ''\n    };\n    this.userLogIn = this.userLogIn.bind(this)\n    this.employerLogIn = this.employerLogIn.bind(this)\n    this.verifierLogIn = this.verifierLogIn.bind(this)\n  }\n\n  captureFile =(event) => {\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n    let reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => this.convertToBuffer(reader)\n  };\n\n  convertToBuffer = async(reader) => {\n    //file is converted to a buffer for upload to IPFS\n      const buffer = await Buffer.from(reader.result);\n    //set this buffer -using es6 syntax\n      this.setState({buffer});\n  };\n\n  onClick = async () => {\n    try{\n      this.setState({blockNumber:\"waiting..\"});\n      this.setState({gasUsed:\"waiting...\"});\n      //get Transaction Receipt in console on click\n      //See: https://web3js.readthedocs.io/en/1.0/web3-eth.html#gettransactionreceipt\n      await web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt)=>{\n        console.log(err,txReceipt);\n        this.setState({txReceipt});\n      }); //await for getTransactionReceipt\n      await this.setState({blockNumber: this.state.txReceipt.blockNumber});\n      await this.setState({gasUsed: this.state.txReceipt.gasUsed});\n    } //try\n    catch(error){\n        console.log(error);\n    } //catch\n  } //onClick\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n   //bring in user's metamask account address\n    const accounts = await web3.eth.getAccounts();\n\n    console.log('Sending from Metamask account: ' + accounts[0]);\n    //obtain contract address from storehash.js\n    const ethAddress= await storehash.options.address;\n    this.setState({ethAddress});\n    //save document to IPFS,return its hash#, and set hash# to state\n    //https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add\n    await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n      console.log(err,ipfsHash);\n      //setState by setting ipfsHash to ipfsHash[0].hash\n      this.setState({ ipfsHash:ipfsHash[0].hash });\n      // call Ethereum contract method \"sendHash\" and .send IPFS hash to etheruem contract\n      //return the transaction hash from the ethereum contract\n      //see, this https://web3js.readthedocs.io/en/1.0/web3-eth-contract.html#methods-mymethod-send\n\n      storehash.methods.sendHash(this.state.ipfsHash).send({\n        from: accounts[0]\n      }, (error, transactionHash) => {\n        console.log(transactionHash);\n        this.setState({transactionHash});\n      }); //storehash\n    }) //await ipfs.add\n  }; //onSubmit\n\n  userLogIn() {\n\n  }\n\n  employerLogIn() {\n\n  }\n\n  verifierLogIn() {\n\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <img src={require('./header.png')} width=\"100%\"/>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Users\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Verifiers\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '3' })}\n              onClick={() => { this.toggle('3'); }}\n            >\n              Employers\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"12\">\n                <Button outline size=\"sm\" block onClick={this.userLogIn}>Sign In</Button>\n                <Users></Users>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"12\">\n                <Button outline size=\"sm\" block onClick={this.verifierLogIn}>Sign In</Button>\n                <div className=\"App\">\n                  <hr />\n                    <h3> Choose file to send to IPFS </h3>\n                    <Form onSubmit={this.onSubmit}>\n                      <input type = \"file\" onChange = {this.captureFile}/>\n                      <Button bsStyle=\"primary\" type=\"submit\">\n                       Send\n                      </Button>\n                     </Form>\n        <hr/>\n         <Button onClick = {this.onClick}> Get Transaction Receipt </Button>\n          <Table bordered responsive>\n                        <thead>\n                          <tr>\n                            <th>Tx Receipt Category</th>\n                            <th>Values</th>\n                          </tr>\n                        </thead>\n\n                        <tbody>\n                          <tr>\n                            <td>IPFS Hash # stored on Eth Contract</td>\n                            <td>{this.state.ipfsHash}</td>\n                          </tr>\n                          <tr>\n                            <td>Ethereum Contract Address</td>\n                            <td>{this.state.ethAddress}</td>\n                          </tr>\n                          <tr>\n                            <td>Tx Hash # </td>\n                            <td>{this.state.transactionHash}</td>\n                          </tr>\n                          <tr>\n                            <td>Block Number # </td>\n                            <td>{this.state.blockNumber}</td>\n                          </tr>\n                          <tr>\n                            <td>Gas Used</td>\n                            <td>{this.state.gasUsed}</td>\n                          </tr>\n\n                        </tbody>\n                    </Table>\n             </div>\n              );\n            } //render\n        } //App\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"3\">\n            <Row>\n              <Col sm=\"12\">\n                <Button outline size=\"sm\" block onClick={this.employerLogIn}>Sign In</Button>\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}