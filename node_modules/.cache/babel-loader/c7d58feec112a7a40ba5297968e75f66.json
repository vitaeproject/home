{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/createClass\");\n\nvar mh = require('multihashes');\n\nvar assert = require('assert');\n\nvar DAGNode =\n/*#__PURE__*/\nfunction () {\n  function DAGNode(data, links, serialized, multihash) {\n    _classCallCheck(this, DAGNode);\n\n    assert(serialized, 'DAGNode needs its serialized format');\n    assert(multihash, 'DAGNode needs its multihash');\n\n    if (typeof multihash === 'string') {\n      multihash = mh.fromB58String(multihash);\n    }\n\n    this._data = data || Buffer.alloc(0);\n    this._links = links || [];\n    this._serialized = serialized;\n    this._multihash = multihash;\n    this._size = this.links.reduce(function (sum, l) {\n      return sum + l.size;\n    }, this.serialized.length);\n    this._json = {\n      data: this.data,\n      links: this.links.map(function (l) {\n        return l.toJSON();\n      }),\n      multihash: mh.toB58String(this.multihash),\n      size: this.size\n    };\n  }\n\n  _createClass(DAGNode, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this._json;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var mhStr = mh.toB58String(this.multihash);\n      return \"DAGNode <\".concat(mhStr, \" - data: \\\"\").concat(this.data.toString(), \"\\\", links: \").concat(this.links.length, \", size: \").concat(this.size, \">\");\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    },\n    set: function set(data) {\n      throw new Error(\"Can't set property: 'data' is immutable\");\n    }\n  }, {\n    key: \"links\",\n    get: function get() {\n      return this._links;\n    },\n    set: function set(links) {\n      throw new Error(\"Can't set property: 'links' is immutable\");\n    }\n  }, {\n    key: \"serialized\",\n    get: function get() {\n      return this._serialized;\n    },\n    set: function set(serialized) {\n      throw new Error(\"Can't set property: 'serialized' is immutable\");\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._size;\n    },\n    set: function set(size) {\n      throw new Error(\"Can't set property: 'size' is immutable\");\n    }\n  }, {\n    key: \"multihash\",\n    get: function get() {\n      return this._multihash;\n    },\n    set: function set(multihash) {\n      throw new Error(\"Can't set property: 'multihash' is immutable\");\n    }\n  }]);\n\n  return DAGNode;\n}();\n\nexports = module.exports = DAGNode;\nexports.create = require('./create');\nexports.clone = require('./clone');\nexports.addLink = require('./addLink');\nexports.rmLink = require('./rmLink');","map":null,"metadata":{},"sourceType":"script"}