{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jen/UCB/home/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jen/UCB/home/src/Employers.js\";\nimport React, { Component } from 'react';\nimport { Alert, Button, Form, FormGroup, Label, Input, FormText, Col } from 'reactstrap';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nvar Employers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Employers, _Component);\n\n  function Employers() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Employers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Employers)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ipfsHash: null,\n      buffer: '',\n      ethAddress: '',\n      userAddress: ''\n    };\n\n    _this.captureAddress = function (event) {\n      event.stopPropagation();\n      event.preventDefault();\n      var addr = event.target.value;\n\n      _this.setState({\n        userAddress: addr\n      });\n    };\n\n    _this.convertToBuffer =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(reader) {\n        var buffer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Buffer.from(reader.result);\n\n              case 2:\n                buffer = _context.sent;\n\n                //set this buffer -using es6 syntax\n                _this.setState({\n                  buffer: buffer\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var accounts, ethAddress, hash;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault(); //bring in user's metamask account address\n\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                console.log('Sending from Metamask account: ' + accounts[0]); //obtain contract address from storehash.js\n\n                _context2.next = 7;\n                return storehash.options.address;\n\n              case 7:\n                ethAddress = _context2.sent;\n\n                _this.setState({\n                  ethAddress: ethAddress\n                }); //save document to IPFS,return its hash#, and set hash# to state\n                //https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add\n\n\n                hash = storehash.methods.getResume(_this.state.userAddress).send({\n                  from: accounts[0]\n                }, function (error, transactionHash) {\n                  console.log(transactionHash);\n                }); //storehash\n\n                _this.setState({\n                  ipfsHash: hash\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Employers, [{\n    key: \"render\",\n    //onSubmit\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Please install \", React.createElement(\"a\", {\n        href: \"https://metamask.io/\",\n        className: \"alert-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"MetaMask\"), \" and sign in!\"), React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"p1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Enter employee's user address:\"), React.createElement(\"input\", {\n        type: \"textArea\",\n        onChange: this.captureAddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"View Result\")));\n    } //render\n\n  }]);\n\n  return Employers;\n}(Component); //App\n\n\nexport default Employers;","map":{"version":3,"sources":["/Users/Jen/UCB/home/src/Employers.js"],"names":["React","Component","Alert","Button","Form","FormGroup","Label","Input","FormText","Col","web3","ipfs","storehash","Employers","state","ipfsHash","buffer","ethAddress","userAddress","captureAddress","event","stopPropagation","preventDefault","addr","target","value","setState","convertToBuffer","reader","Buffer","from","result","onSubmit","eth","getAccounts","accounts","console","log","options","address","hash","methods","getResume","send","error","transactionHash"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Alert, Button, Form, FormGroup, Label, Input, FormText, Col } from 'reactstrap';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nclass Employers extends Component {\n\n    state = {\n      ipfsHash:null,\n      buffer:'',\n      ethAddress:'',\n      userAddress: ''\n    };\n\n    captureAddress =(event) => {\n      event.stopPropagation()\n      event.preventDefault()\n      const addr = event.target.value\n      this.setState({userAddress: addr})\n    };\n\n    convertToBuffer = async(reader) => {\n      //file is converted to a buffer for upload to IPFS\n        const buffer = await Buffer.from(reader.result);\n      //set this buffer -using es6 syntax\n        this.setState({buffer});\n    };\n\n    onSubmit = async (event) => {\n      event.preventDefault();\n     //bring in user's metamask account address\n      const accounts = await web3.eth.getAccounts();\n\n      console.log('Sending from Metamask account: ' + accounts[0]);\n      //obtain contract address from storehash.js\n      const ethAddress= await storehash.options.address;\n      this.setState({ethAddress});\n      //save document to IPFS,return its hash#, and set hash# to state\n      //https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add\n      let hash = storehash.methods.getResume(this.state.userAddress).send({\n        from: accounts[0]\n      }, (error, transactionHash) => {\n        console.log(transactionHash);\n      }); //storehash\n      this.setState({ipfsHash: hash});\n    }; //onSubmit\n\n    render() {\n      return (\n        <div className=\"App\">\n          <Alert color=\"primary\">\n            Please install <a href=\"https://metamask.io/\" className=\"alert-link\">MetaMask</a> and sign in!\n          </Alert>\n          <Form onSubmit={this.onSubmit}>\n            <p1>Enter employee's user address:</p1>\n            <input type=\"textArea\" onChange={this.captureAddress}/>\n            <br></br>\n            <br></br>\n             <Button\n             bsStyle=\"primary\"\n             type=\"submit\">\n             View Result\n             </Button>\n          </Form>\n        </div>\n      );\n    } //render\n} //App\nexport default Employers;\n"]},"metadata":{},"sourceType":"module"}