{"map":"{\"version\":3,\"sources\":[\"/Users/Jen/UCB/home/src/storehash.js\",\"/Users/Jen/UCB/home/src/ipfs.js\",\"/Users/Jen/UCB/home/src/Verifiers.js\",\"/Users/Jen/UCB/home/src/web3.js\",\"/Users/Jen/UCB/home/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/Jen/UCB/home/src/header.png\",\"/Users/Jen/UCB/home/src/Users.js\",\"/Users/Jen/UCB/home/src/Employers.js\",\"/Users/Jen/UCB/home/src/App.js\",\"/Users/Jen/UCB/home/src/serviceWorker.js\",\"/Users/Jen/UCB/home/src/index.js\"],\"names\":[\"_web3__WEBPACK_IMPORTED_MODULE_0__\",\"__webpack_require__\",\"__webpack_exports__\",\"web3\",\"eth\",\"Contract\",\"constant\",\"inputs\",\"name\",\"type\",\"outputs\",\"payable\",\"stateMutability\",\"ipfs\",\"require\",\"host\",\"port\",\"protocol\",\"Verifiers\",\"state\",\"ipfsHash\",\"buffer\",\"ethAddress\",\"blockNumber\",\"transactionHash\",\"gasUsed\",\"txReceipt\",\"userAddress\",\"captureFile\",\"event\",\"stopPropagation\",\"preventDefault\",\"file\",\"target\",\"files\",\"reader\",\"window\",\"FileReader\",\"readAsArrayBuffer\",\"onloadend\",\"_this\",\"convertToBuffer\",\"captureAddress\",\"addr\",\"value\",\"setState\",\"_callee\",\"_Users_Jen_UCB_home_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default\",\"a\",\"wrap\",\"_context\",\"prev\",\"next\",\"Buffer\",\"from\",\"result\",\"sent\",\"stop\",\"this\",\"onClick\",\"_callee2\",\"_context2\",\"getTransactionReceipt\",\"err\",\"console\",\"log\",\"t0\",\"onSubmit\",\"_callee3\",\"accounts\",\"_context3\",\"getAccounts\",\"storehash\",\"options\",\"address\",\"add\",\"hash\",\"methods\",\"sendHash\",\"send\",\"error\",\"react__WEBPACK_IMPORTED_MODULE_7___default\",\"createElement\",\"className\",\"reactstrap__WEBPACK_IMPORTED_MODULE_8__\",\"color\",\"href\",\"onChange\",\"bsStyle\",\"bordered\",\"responsive\",\"Component\",\"web3__WEBPACK_IMPORTED_MODULE_0__\",\"n\",\"Web3\",\"currentProvider\",\"module\",\"exports\",\"p\",\"Users\",\"react_default\",\"reactstrap_es\",\"React\",\"Employers\",\"App\",\"props\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"toggle\",\"bind\",\"assertThisInitialized\",\"activeTab\",\"employerLogIn\",\"tab\",\"_this2\",\"src\",\"width\",\"tabs\",\"classnames\",\"active\",\"tabId\",\"sm\",\"Users_Users\",\"Employers_Employers\",\"Boolean\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"App_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import web3 from './web3';\\n//access our local copy to contract deployed on rinkeby testnet\\n//use your own contract address\\nconst address = '0xC7fD6A5615d4E04C9123cFe2dfaCD38902411F06';\\n//use the ABI from your contract\\nconst abi = [\\n\\t{\\n\\t\\t\\\"constant\\\": false,\\n\\t\\t\\\"inputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"name\\\": \\\"x\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"name\\\": \\\"addr\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"name\\\": \\\"sendHash\\\",\\n\\t\\t\\\"outputs\\\": [],\\n\\t\\t\\\"payable\\\": false,\\n\\t\\t\\\"stateMutability\\\": \\\"nonpayable\\\",\\n\\t\\t\\\"type\\\": \\\"function\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"constant\\\": true,\\n\\t\\t\\\"inputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"name\\\": \\\"hash\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"name\\\": \\\"getVerifier\\\",\\n\\t\\t\\\"outputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"name\\\": \\\"\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"address\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"payable\\\": false,\\n\\t\\t\\\"stateMutability\\\": \\\"view\\\",\\n\\t\\t\\\"type\\\": \\\"function\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"constant\\\": false,\\n\\t\\t\\\"inputs\\\": [],\\n\\t\\t\\\"name\\\": \\\"uploadResumeFees\\\",\\n\\t\\t\\\"outputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"name\\\": \\\"\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"payable\\\": true,\\n\\t\\t\\\"stateMutability\\\": \\\"payable\\\",\\n\\t\\t\\\"type\\\": \\\"function\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"constant\\\": true,\\n\\t\\t\\\"inputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"name\\\": \\\"addr\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"name\\\": \\\"getResume\\\",\\n\\t\\t\\\"outputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"name\\\": \\\"\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"payable\\\": false,\\n\\t\\t\\\"stateMutability\\\": \\\"view\\\",\\n\\t\\t\\\"type\\\": \\\"function\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"inputs\\\": [],\\n\\t\\t\\\"payable\\\": false,\\n\\t\\t\\\"stateMutability\\\": \\\"nonpayable\\\",\\n\\t\\t\\\"type\\\": \\\"constructor\\\"\\n\\t}\\n]\\nexport default new web3.eth.Contract(abi, address);\\n\",\"//using the infura.io node, otherwise ipfs requires you to run a //daemon on your own computer/server.\\nconst IPFS = require('ipfs-api');\\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\\n//run with local daemon\\n// const ipfsApi = require('ipfs-api');\\n// const ipfs = new ipfsApi('localhost', '5001', {protocol:'http'});\\nexport default ipfs;\\n\",\"import React, { Component } from 'react';\\nimport { Alert, FormGroup, Label, Input, Form, Table, TabContent, TabPane, Nav, NavItem, NavLink, Button, Row, Col } from 'reactstrap';\\nimport './App.css';\\nimport web3 from './web3';\\nimport ipfs from './ipfs';\\nimport storehash from './storehash';\\n\\n\\nclass Verifiers extends Component {\\n\\n    state = {\\n      ipfsHash:null,\\n      buffer:'',\\n      ethAddress:'',\\n      blockNumber:'',\\n      transactionHash:'',\\n      gasUsed:'',\\n      txReceipt: '',\\n      userAddress: ''\\n    };\\n\\n    captureFile =(event) => {\\n      event.stopPropagation()\\n      event.preventDefault()\\n      const file = event.target.files[0]\\n      let reader = new window.FileReader()\\n      reader.readAsArrayBuffer(file)\\n      reader.onloadend = () => this.convertToBuffer(reader)\\n    };\\n\\n    captureAddress =(event) => {\\n      event.stopPropagation()\\n      event.preventDefault()\\n      const addr = event.target.value\\n      this.setState({userAddress: addr})\\n    };\\n\\n    convertToBuffer = async(reader) => {\\n      //file is converted to a buffer for upload to IPFS\\n        const buffer = await Buffer.from(reader.result);\\n      //set this buffer -using es6 syntax\\n        this.setState({buffer});\\n    };\\n\\n    onClick = async () => {\\n      try{\\n        this.setState({blockNumber:\\\"waiting..\\\"});\\n        this.setState({gasUsed:\\\"waiting...\\\"});\\n        //get Transaction Receipt in console on click\\n        //See: https://web3js.readthedocs.io/en/1.0/web3-eth.html#gettransactionreceipt\\n        await web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt)=>{\\n          console.log(err,txReceipt);\\n          this.setState({txReceipt});\\n        }); //await for getTransactionReceipt\\n        await this.setState({blockNumber: this.state.txReceipt.blockNumber});\\n        await this.setState({gasUsed: this.state.txReceipt.gasUsed});\\n      } //try\\n      catch(error){\\n          console.log(error);\\n      } //catch\\n    } //onClick\\n\\n    onSubmit = async (event) => {\\n      event.preventDefault();\\n     //bring in user's metamask account address\\n      const accounts = await web3.eth.getAccounts();\\n\\n      console.log('Sending from Metamask account: ' + accounts[0]);\\n      //obtain contract address from storehash.js\\n      const ethAddress= await storehash.options.address;\\n      this.setState({ethAddress});\\n      //save document to IPFS,return its hash#, and set hash# to state\\n      //https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add\\n      await ipfs.add(this.state.buffer, (err, ipfsHash) => {\\n        console.log(err,ipfsHash);\\n        //setState by setting ipfsHash to ipfsHash[0].hash\\n        this.setState({ ipfsHash:ipfsHash[0].hash });\\n        // call Ethereum contract method \\\"sendHash\\\" and .send IPFS hash to etheruem contract\\n        //return the transaction hash from the ethereum contract\\n        //see, this https://web3js.readthedocs.io/en/1.0/web3-eth-contract.html#methods-mymethod-send\\n\\n        storehash.methods.sendHash(this.state.ipfsHash, this.state.userAddress).send({\\n          from: accounts[0]\\n        }, (error, transactionHash) => {\\n          console.log(transactionHash);\\n          this.setState({transactionHash});\\n        }); //storehash\\n      }) //await ipfs.add\\n    }; //onSubmit\\n\\n    render() {\\n      return (\\n        <div className=\\\"App\\\">\\n          <Alert color=\\\"primary\\\">\\n            Please install <a href=\\\"https://metamask.io/\\\" className=\\\"alert-link\\\">MetaMask</a> and sign in!\\n          </Alert>\\n          <h3> Choose verified resume to send to IPFS </h3>\\n          <Form onSubmit={this.onSubmit}>\\n            <input\\n              type = \\\"file\\\"\\n              onChange = {this.captureFile}\\n            />\\n            <p1>User address</p1>\\n            <input type=\\\"textArea\\\" onChange={this.captureAddress}/>\\n            <br></br>\\n             <Button\\n             bsStyle=\\\"primary\\\"\\n             type=\\\"submit\\\">\\n             Send\\n             </Button>\\n          </Form>\\n          <hr/>\\n          <Button onClick = {this.onClick}> Get Transaction Receipt </Button>\\n          <Table bordered responsive>\\n            <thead>\\n              <tr>\\n                <th>Tx Receipt Category</th>\\n                <th>Values</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td>IPFS Hash # stored on Eth Contract</td>\\n                <td>{this.state.ipfsHash}</td>\\n              </tr>\\n              <tr>\\n                <td>Ethereum Contract Address</td>\\n                <td>{this.state.ethAddress}</td>\\n              </tr>\\n              <tr>\\n                <td>Tx Hash # </td>\\n                <td>{this.state.transactionHash}</td>\\n              </tr>\\n              <tr>\\n                <td>Block Number # </td>\\n                <td>{this.state.blockNumber}</td>\\n              </tr>\\n              <tr>\\n                <td>Gas Used</td>\\n                <td>{this.state.gasUsed}</td>\\n              </tr>\\n            </tbody>\\n          </Table>\\n        </div>\\n      );\\n    } //render\\n} //App\\nexport default Verifiers;\\n\",\"//overrides metamask v0.2 for our 1.0 version.\\n//1.0 lets us use async and await instead of promises\\nimport Web3 from 'web3';\\n\\nconst web3 = new Web3(window.web3.currentProvider);\\nexport default web3;\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/header.bc7d56ad.png\\\";\",\"import React from 'react';\\nimport { Alert, Button, Form, FormGroup, Label, Input, FormText, Col } from 'reactstrap';\\n\\nexport default class Users extends React.Component {\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <Alert color=\\\"primary\\\">\\n          Please install <a href=\\\"https://metamask.io/\\\" className=\\\"alert-link\\\">MetaMask</a> and sign in!\\n        </Alert>\\n        <h3> Choose resume to upload and verify</h3>\\n        <Form onSubmit={this.onSubmit}>\\n          <input\\n            type = \\\"file\\\"\\n            onChange = {this.captureFile}\\n          />\\n           <Button\\n           bsStyle=\\\"primary\\\"\\n           type=\\\"submit\\\">\\n           Upload\\n           </Button>\\n        </Form>\\n      </div>\\n    );\\n  }\\n}\\n\",\"import React from 'react';\\nimport { Alert, Button, Form, FormGroup, Label, Input, FormText, Col } from 'reactstrap';\\n\\nexport default class Employers extends React.Component {\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <Alert color=\\\"primary\\\">\\n          Please install <a href=\\\"https://metamask.io/\\\" className=\\\"alert-link\\\">MetaMask</a> and sign in!\\n        </Alert>\\n      </div>\\n    );\\n  }\\n}\\n\",\"import React from 'react';\\nimport { Form, Table, TabContent, TabPane, Nav, NavItem, NavLink, Button, Row, Col } from 'reactstrap';\\nimport classnames from 'classnames';\\nimport Users from './Users.js';\\nimport Verifiers from './Verifiers.js';\\nimport Employers from './Employers.js';\\nimport web3 from './web3.js';\\nimport ipfs from './ipfs.js';\\nimport storehash from './storehash.js';\\n\\nexport default class App extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.toggle = this.toggle.bind(this);\\n    this.state = {\\n      activeTab: '1'\\n    };\\n    this.employerLogIn = this.employerLogIn.bind(this)\\n  }\\n\\n  employerLogIn() {\\n\\n  }\\n\\n  toggle(tab) {\\n    if (this.state.activeTab !== tab) {\\n      this.setState({\\n        activeTab: tab\\n      });\\n    }\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <img src={require('./header.png')} width=\\\"100%\\\"/>\\n        <Nav tabs>\\n          <NavItem>\\n            <NavLink\\n              className={classnames({ active: this.state.activeTab === '1' })}\\n              onClick={() => { this.toggle('1'); }}\\n            >\\n              Users\\n            </NavLink>\\n          </NavItem>\\n          <NavItem>\\n            <NavLink\\n              className={classnames({ active: this.state.activeTab === '2' })}\\n              onClick={() => { this.toggle('2'); }}\\n            >\\n              Verifiers\\n            </NavLink>\\n          </NavItem>\\n          <NavItem>\\n            <NavLink\\n              className={classnames({ active: this.state.activeTab === '3' })}\\n              onClick={() => { this.toggle('3'); }}\\n            >\\n              Employers\\n            </NavLink>\\n          </NavItem>\\n        </Nav>\\n        <TabContent activeTab={this.state.activeTab}>\\n          <TabPane tabId=\\\"1\\\">\\n            <Row>\\n              <Col sm=\\\"12\\\">\\n                <Users></Users>\\n              </Col>\\n            </Row>\\n          </TabPane>\\n          <TabPane tabId=\\\"2\\\">\\n            <Row>\\n              <Col sm=\\\"12\\\">\\n                <Verifiers></Verifiers>\\n              </Col>\\n            </Row>\\n          </TabPane>\\n          <TabPane tabId=\\\"3\\\">\\n            <Row>\\n              <Col sm=\\\"12\\\">\\n                <Employers></Employers>\\n              </Col>\\n            </Row>\\n          </TabPane>\\n        </TabContent>\\n      </div>\\n    );\\n  }\\n}\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{116:function(e,t,a){\"use strict\";var n=a(62);t.a=new n.a.eth.Contract([{constant:!1,inputs:[{name:\"x\",type:\"string\"},{name:\"addr\",type:\"string\"}],name:\"sendHash\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[{name:\"hash\",type:\"string\"}],name:\"getVerifier\",outputs:[{name:\"\",type:\"address\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[],name:\"uploadResumeFees\",outputs:[{name:\"\",type:\"uint256\"}],payable:!0,stateMutability:\"payable\",type:\"function\"},{constant:!0,inputs:[{name:\"addr\",type:\"string\"}],name:\"getResume\",outputs:[{name:\"\",type:\"string\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{inputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"constructor\"}],\"0xC7fD6A5615d4E04C9123cFe2dfaCD38902411F06\")},163:function(e,t,a){\"use strict\";var n=new(a(483))({host:\"ipfs.infura.io\",port:5001,protocol:\"https\"});t.a=n},270:function(e,t){},294:function(e,t,a){\"use strict\";(function(e){var n=a(50),r=a.n(n),s=a(117),c=a(34),l=a(35),i=a(38),o=a(36),u=a(37),m=a(1),p=a.n(m),d=a(10),f=(a(309),a(62)),h=a(163),b=a(116),E=function(t){function a(){var t,n;Object(c.a)(this,a);for(var l=arguments.length,u=new Array(l),m=0;m<l;m++)u[m]=arguments[m];return(n=Object(i.a)(this,(t=Object(o.a)(a)).call.apply(t,[this].concat(u)))).state={ipfsHash:null,buffer:\"\",ethAddress:\"\",blockNumber:\"\",transactionHash:\"\",gasUsed:\"\",txReceipt:\"\",userAddress:\"\"},n.captureFile=function(e){e.stopPropagation(),e.preventDefault();var t=e.target.files[0],a=new window.FileReader;a.readAsArrayBuffer(t),a.onloadend=function(){return n.convertToBuffer(a)}},n.captureAddress=function(e){e.stopPropagation(),e.preventDefault();var t=e.target.value;n.setState({userAddress:t})},n.convertToBuffer=function(){var t=Object(s.a)(r.a.mark(function t(a){var s;return r.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.from(a.result);case 2:s=t.sent,n.setState({buffer:s});case 4:case\"end\":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}(),n.onClick=Object(s.a)(r.a.mark(function e(){return r.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n.setState({blockNumber:\"waiting..\"}),n.setState({gasUsed:\"waiting...\"}),e.next=5,f.a.eth.getTransactionReceipt(n.state.transactionHash,function(e,t){console.log(e,t),n.setState({txReceipt:t})});case 5:return e.next=7,n.setState({blockNumber:n.state.txReceipt.blockNumber});case 7:return e.next=9,n.setState({gasUsed:n.state.txReceipt.gasUsed});case 9:e.next=14;break;case 11:e.prev=11,e.t0=e.catch(0),console.log(e.t0);case 14:case\"end\":return e.stop()}},e,this,[[0,11]])})),n.onSubmit=function(){var e=Object(s.a)(r.a.mark(function e(t){var a,s;return r.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),e.next=3,f.a.eth.getAccounts();case 3:return a=e.sent,console.log(\"Sending from Metamask account: \"+a[0]),e.next=7,b.a.options.address;case 7:return s=e.sent,n.setState({ethAddress:s}),e.next=11,h.a.add(n.state.buffer,function(e,t){console.log(e,t),n.setState({ipfsHash:t[0].hash}),b.a.methods.sendHash(n.state.ipfsHash,n.state.userAddress).send({from:a[0]},function(e,t){console.log(t),n.setState({transactionHash:t})})});case 11:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),n}return Object(u.a)(a,t),Object(l.a)(a,[{key:\"render\",value:function(){return p.a.createElement(\"div\",{className:\"App\"},p.a.createElement(d.a,{color:\"primary\"},\"Please install \",p.a.createElement(\"a\",{href:\"https://metamask.io/\",className:\"alert-link\"},\"MetaMask\"),\" and sign in!\"),p.a.createElement(\"h3\",null,\" Choose verified resume to send to IPFS \"),p.a.createElement(d.d,{onSubmit:this.onSubmit},p.a.createElement(\"input\",{type:\"file\",onChange:this.captureFile}),p.a.createElement(\"p1\",null,\"User address\"),p.a.createElement(\"input\",{type:\"textArea\",onChange:this.captureAddress}),p.a.createElement(\"br\",null),p.a.createElement(d.b,{bsStyle:\"primary\",type:\"submit\"},\"Send\")),p.a.createElement(\"hr\",null),p.a.createElement(d.b,{onClick:this.onClick},\" Get Transaction Receipt \"),p.a.createElement(d.k,{bordered:!0,responsive:!0},p.a.createElement(\"thead\",null,p.a.createElement(\"tr\",null,p.a.createElement(\"th\",null,\"Tx Receipt Category\"),p.a.createElement(\"th\",null,\"Values\"))),p.a.createElement(\"tbody\",null,p.a.createElement(\"tr\",null,p.a.createElement(\"td\",null,\"IPFS Hash # stored on Eth Contract\"),p.a.createElement(\"td\",null,this.state.ipfsHash)),p.a.createElement(\"tr\",null,p.a.createElement(\"td\",null,\"Ethereum Contract Address\"),p.a.createElement(\"td\",null,this.state.ethAddress)),p.a.createElement(\"tr\",null,p.a.createElement(\"td\",null,\"Tx Hash # \"),p.a.createElement(\"td\",null,this.state.transactionHash)),p.a.createElement(\"tr\",null,p.a.createElement(\"td\",null,\"Block Number # \"),p.a.createElement(\"td\",null,this.state.blockNumber)),p.a.createElement(\"tr\",null,p.a.createElement(\"td\",null,\"Gas Used\"),p.a.createElement(\"td\",null,this.state.gasUsed)))))}}]),a}(m.Component);t.a=E}).call(this,a(2).Buffer)},296:function(e,t,a){e.exports=a(775)},301:function(e,t,a){},309:function(e,t,a){},340:function(e,t){},342:function(e,t){},367:function(e,t){},410:function(e,t){},529:function(e,t){},530:function(e,t){},549:function(e,t){},62:function(e,t,a){\"use strict\";var n=a(295),r=new(a.n(n).a)(window.web3.currentProvider);t.a=r},726:function(e,t){},770:function(e,t,a){e.exports=a.p+\"static/media/header.bc7d56ad.png\"},775:function(e,t,a){\"use strict\";a.r(t);var n=a(1),r=a.n(n),s=a(39),c=a.n(s),l=(a(301),a(34)),i=a(35),o=a(38),u=a(36),m=a(37),p=a(49),d=a(10),f=a(3),h=a.n(f),b=function(e){function t(){return Object(l.a)(this,t),Object(o.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(d.a,{color:\"primary\"},\"Please install \",r.a.createElement(\"a\",{href:\"https://metamask.io/\",className:\"alert-link\"},\"MetaMask\"),\" and sign in!\"),r.a.createElement(\"h3\",null,\" Choose resume to upload and verify\"),r.a.createElement(d.d,{onSubmit:this.onSubmit},r.a.createElement(\"input\",{type:\"file\",onChange:this.captureFile}),r.a.createElement(d.b,{bsStyle:\"primary\",type:\"submit\"},\"Upload\")))}}]),t}(r.a.Component),E=a(294),y=function(e){function t(){return Object(l.a)(this,t),Object(o.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(d.a,{color:\"primary\"},\"Please install \",r.a.createElement(\"a\",{href:\"https://metamask.io/\",className:\"alert-link\"},\"MetaMask\"),\" and sign in!\"))}}]),t}(r.a.Component),g=(a(62),a(163),a(116),function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(o.a)(this,Object(u.a)(t).call(this,e))).toggle=a.toggle.bind(Object(p.a)(Object(p.a)(a))),a.state={activeTab:\"1\"},a.employerLogIn=a.employerLogIn.bind(Object(p.a)(Object(p.a)(a))),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"employerLogIn\",value:function(){}},{key:\"toggle\",value:function(e){this.state.activeTab!==e&&this.setState({activeTab:e})}},{key:\"render\",value:function(){var e=this;return r.a.createElement(\"div\",null,r.a.createElement(\"img\",{src:a(770),width:\"100%\"}),r.a.createElement(d.e,{tabs:!0},r.a.createElement(d.f,null,r.a.createElement(d.g,{className:h()({active:\"1\"===this.state.activeTab}),onClick:function(){e.toggle(\"1\")}},\"Users\")),r.a.createElement(d.f,null,r.a.createElement(d.g,{className:h()({active:\"2\"===this.state.activeTab}),onClick:function(){e.toggle(\"2\")}},\"Verifiers\")),r.a.createElement(d.f,null,r.a.createElement(d.g,{className:h()({active:\"3\"===this.state.activeTab}),onClick:function(){e.toggle(\"3\")}},\"Employers\"))),r.a.createElement(d.i,{activeTab:this.state.activeTab},r.a.createElement(d.j,{tabId:\"1\"},r.a.createElement(d.h,null,r.a.createElement(d.c,{sm:\"12\"},r.a.createElement(b,null)))),r.a.createElement(d.j,{tabId:\"2\"},r.a.createElement(d.h,null,r.a.createElement(d.c,{sm:\"12\"},r.a.createElement(E.a,null)))),r.a.createElement(d.j,{tabId:\"3\"},r.a.createElement(d.h,null,r.a.createElement(d.c,{sm:\"12\"},r.a.createElement(y,null))))))}}]),t}(r.a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a(771),a(773);c.a.render(r.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[296,2,1]]]);","extractedComments":[]}